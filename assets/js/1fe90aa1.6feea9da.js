"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[3356],{34276:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=d(17624),o=d(4552);const t={sidebar_position:11},r="PPOSIXTimeRange and PInterval",c={id:"onchain/API/types/PPOSIXTimeRange_and_PInterval",title:"PPOSIXTimeRange and PInterval",description:"used to describe the time interval in which a transaction is considered valid",source:"@site/docs/onchain/API/types/PPOSIXTimeRange_and_PInterval.mdx",sourceDirName:"onchain/API/types",slug:"/onchain/API/types/PPOSIXTimeRange_and_PInterval",permalink:"/onchain/API/types/PPOSIXTimeRange_and_PInterval",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/API/types/PPOSIXTimeRange_and_PInterval.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"PValidatorHash",permalink:"/onchain/API/types/PValidatorHash"},next:{title:"PDatumHash",permalink:"/onchain/API/types/PDatumHash"}},s={},l=[{value:"<code>PInterval</code>",id:"pinterval",level:2},{value:"<code>from</code>",id:"from",level:3},{value:"<code>to</code>",id:"to",level:3},{value:"<code>PLowerBound</code> and <code>PUpperBound</code>",id:"plowerbound-and-pupperbound",level:2},{value:"<code>bound</code>",id:"bound",level:3},{value:"<code>inclusive</code>",id:"inclusive",level:3},{value:"<code>PExtended</code>",id:"pextended",level:2},{value:"<code>PNegInf</code>",id:"pneginf",level:3},{value:"<code>PFinite</code>",id:"pfinite",level:3},{value:"<code>PPosInf</code>",id:"pposinf",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"pposixtimerange-and-pinterval",children:[(0,i.jsx)(n.code,{children:"PPOSIXTimeRange"})," and ",(0,i.jsx)(n.code,{children:"PInterval"})]}),"\n",(0,i.jsx)(n.p,{children:"used to describe the time interval in which a transaction is considered valid"}),"\n",(0,i.jsx)(n.p,{children:"definition:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export const PExtended = pstruct({\n    PNegInf: {},\n    PFinite: { _0: int },\n    PPosInf: {}\n});\n\nexport const PUpperBound = pstruct({\n    PUpperBound: {\n        bound: PExtended.type,\n        inclusive: bool \n    }\n});\n\nexport const PLowerBound = pstruct({\n    PLowerBound: {\n        bound: PExtended.type,\n        inclusive: bool \n    }\n});\n\nexport const PInterval = pstruct({\n    PInterval: {\n        from: PLowerBound.type,\n        to: PUpperBound.type\n    }\n});\n\nexport const PPOSIXTimeRange = PInterval;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pinterval",children:(0,i.jsx)(n.code,{children:"PInterval"})}),"\n",(0,i.jsx)(n.h3,{id:"from",children:(0,i.jsx)(n.code,{children:"from"})}),"\n",(0,i.jsxs)(n.p,{children:["type: ",(0,i.jsx)(n.a,{href:"#plowerbound-and-pupperbound",children:(0,i.jsx)(n.code,{children:"PLowerBound"})})]}),"\n",(0,i.jsx)(n.h3,{id:"to",children:(0,i.jsx)(n.code,{children:"to"})}),"\n",(0,i.jsxs)(n.p,{children:["type: ",(0,i.jsx)(n.a,{href:"#plowerbound-and-pupperbound",children:(0,i.jsx)(n.code,{children:"PUpperBound"})})]}),"\n",(0,i.jsxs)(n.h2,{id:"plowerbound-and-pupperbound",children:[(0,i.jsx)(n.code,{children:"PLowerBound"})," and ",(0,i.jsx)(n.code,{children:"PUpperBound"})]}),"\n",(0,i.jsx)(n.p,{children:"even if the two have differnet name they are foundamentaly interchangeable\nsince both have the same strucutre."}),"\n",(0,i.jsx)(n.h3,{id:"bound",children:(0,i.jsx)(n.code,{children:"bound"})}),"\n",(0,i.jsxs)(n.p,{children:["type: ",(0,i.jsx)(n.a,{href:"#pextended",children:(0,i.jsx)(n.code,{children:"PExtended"})})]}),"\n",(0,i.jsx)(n.h3,{id:"inclusive",children:(0,i.jsx)(n.code,{children:"inclusive"})}),"\n",(0,i.jsxs)(n.p,{children:["type: ",(0,i.jsx)(n.a,{href:"../../stdlib/TermBool",children:(0,i.jsx)(n.code,{children:"bool"})})]}),"\n",(0,i.jsx)(n.h2,{id:"pextended",children:(0,i.jsx)(n.code,{children:"PExtended"})}),"\n",(0,i.jsx)(n.p,{children:"either an interger or positive/negative infinite representation"}),"\n",(0,i.jsx)(n.h3,{id:"pneginf",children:(0,i.jsx)(n.code,{children:"PNegInf"})}),"\n",(0,i.jsx)(n.h3,{id:"pfinite",children:(0,i.jsx)(n.code,{children:"PFinite"})}),"\n",(0,i.jsxs)(n.p,{children:["field type: ",(0,i.jsx)(n.a,{href:"../../stdlib/TermInt",children:(0,i.jsx)(n.code,{children:"int"})})]}),"\n",(0,i.jsx)(n.h3,{id:"pposinf",children:(0,i.jsx)(n.code,{children:"PPosInf"})})]})}function p(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},4552:(e,n,d)=>{d.d(n,{I:()=>c,M:()=>r});var i=d(11504);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);