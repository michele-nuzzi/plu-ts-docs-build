"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[1920],{16084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=t(17624),i=t(4552);const o={sidebar_position:1},c="Concepts",a={id:"onchain/Concepts",title:"Concepts",description:"Core concepts",source:"@site/docs/onchain/Concepts.mdx",sourceDirName:"onchain",slug:"/onchain/Concepts",permalink:"/onchain/Concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/Concepts.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Onchain",permalink:"/category/onchain"},next:{title:"Types",permalink:"/onchain/Types"}},r={},l=[{value:"Core concepts",id:"core-concepts",level:2},{value:"eDSL concepts",id:"edsl-concepts",level:2}];function d(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"concepts",children:"Concepts"}),"\n",(0,s.jsx)(n.h2,{id:"core-concepts",children:"Core concepts"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"plu-ts"})," is a strongly typed eDSL for generating Cardano Smart Contracts."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to allow the creation of efficient smart contracts, ",(0,s.jsx)(n.code,{children:"plu-ts"})," is functional, allowing more control over the compiled result."]}),"\n",(0,s.jsxs)(n.p,{children:["As a consequence of the functional nature of the language, everything in ",(0,s.jsx)(n.code,{children:"plu-ts"})," is an expression."]}),"\n",(0,s.jsx)(n.h2,{id:"edsl-concepts",children:"eDSL concepts"}),"\n",(0,s.jsxs)(n.p,{children:["eDSL stands for ",(0,s.jsx)(n.code,{children:"embedded Domain Specific Language"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"What it means can be explained by analyzing the definition:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Language"})," explains that is a programming language we are talking about."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Domain Specific"})," explains that the language is meant for a ",(0,s.jsx)(n.em,{children:"specific set of tasks"}),'. The "Domain", or specific purpose of ',(0,s.jsx)(n.code,{children:"plu-ts"})," is the creation of Cardano smart contracts."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"embedded"})," means that it is a language inside another language. While ",(0,s.jsx)(n.code,{children:"plu-ts"})," is a language on its own, it is built inside of the Typescript language (which is called the ",(0,s.jsx)(n.em,{children:"host language"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["When writing ",(0,s.jsx)(n.code,{children:"plu-ts"})," code it is important to distinguish what parts of the code are native to Typescript and what parts are ",(0,s.jsx)(n.code,{children:"plu-ts"}),"."]}),(0,s.jsxs)(n.p,{children:["Since Typescript is the host language, Typescript will be our starting point for learning about ",(0,s.jsx)(n.code,{children:"plu-ts"}),"."]})]})]})}function p(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>c});var s=t(11504);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);