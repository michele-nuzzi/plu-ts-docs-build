"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[42024],{55980:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var s=t(17624),r=t(4552),i=t(61268),a=t(87768);const o={sidebar_position:-1,sidebar_class_name:"hidden"},l="Hello plu-ts",c={id:"examples/Hello_world_v0",title:"Hello plu-ts",description:"You can find the last version here.",source:"@site/docs/examples/Hello_world_v0.mdx",sourceDirName:"examples",slug:"/examples/Hello_world_v0",permalink:"/examples/Hello_world_v0",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/examples/Hello_world_v0.mdx",tags:[],version:"current",sidebarPosition:-1,frontMatter:{sidebar_position:-1,sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/category/examples"},next:{title:"Hello World",permalink:"/examples/Hello_World"}},d={},h=[{value:"Run-trough video",id:"run-trough-video",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Project set up",id:"project-set-up",level:2},{value:"The contract",id:"the-contract",level:2},{value:"Template overview",id:"template-overview",level:3},{value:"run the template",id:"run-the-template",level:3},{value:"Hello plu-ts",id:"hello-plu-ts-1",level:2},{value:"introduce an <code>owner</code>",id:"introduce-an-owner",level:3},{value:"send messages to the contracts",id:"send-messages-to-the-contracts",level:3},{value:"implement the logic",id:"implement-the-logic",level:3},{value:"Deployng the Contract",id:"deployng-the-contract",level:2},{value:"Create the Koios provider",id:"create-the-koios-provider",level:3},{value:"Create the transaction builder",id:"create-the-transaction-builder",level:3},{value:"get some founds",id:"get-some-founds",level:3},{value:"build the deploy transaction",id:"build-the-deploy-transaction",level:3},{value:"sign the deploy transaction",id:"sign-the-deploy-transaction",level:3},{value:"submit the deploy transaction",id:"submit-the-deploy-transaction",level:3},{value:"Using the Contract",id:"using-the-contract",level:2},{value:"get the reference UTxO",id:"get-the-reference-utxo",level:3},{value:"build the transaction",id:"build-the-transaction",level:3},{value:"sign and submit",id:"sign-and-submit",level:3},{value:"Return the <code>tADA</code>",id:"return-the-tada",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",input:"input",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"hello-plu-ts",children:"Hello plu-ts"}),"\n",(0,s.jsx)(n.admonition,{title:"There is an updated version of this page",type:"caution",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"./Hello_World",children:"You can find the last version here"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"run-trough-video",children:"Run-trough video"}),"\n",(0,s.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/b6MaSz6NIh8",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),"\n",(0,s.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,s.jsx)(n.p,{children:"All we need to build a Smart contract and interact with it is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"plu-ts"})}),"\n",(0,s.jsx)(n.li,{children:"some way to submit transactions."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Infact, ",(0,s.jsx)(n.code,{children:"plu-ts"})," allows you to write the smart contract and create transactions."]}),"\n",(0,s.jsxs)(n.p,{children:["To submit the tranasction we will use the ",(0,s.jsx)(n.a,{href:"https://www.koios.rest/",children:"koios"})," API, with a simple POST request to the ",(0,s.jsx)(n.a,{href:"https://api.koios.rest/#post-/submittx",children:"submit endpoint"}),";\nbut we'll think about that later."]}),"\n",(0,s.jsx)(n.p,{children:"So for now our pre-requisites add up to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"plu-ts"})," (and ",(0,s.jsx)(n.code,{children:"npm"})," to install it)"]}),"\n",(0,s.jsx)(n.li,{children:"anything that can run javascript (server environment or browser, doesn't matter)"}),"\n",(0,s.jsx)(n.li,{children:"an internet connection"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-set-up",children:"Project set up"}),"\n",(0,s.jsxs)(n.p,{children:["usign ",(0,s.jsx)(n.code,{children:"git"})," we clone a very simple template project:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/HarmonicLabs/plu-ts-starter.git\nmv plu-ts-starter hello-pluts\ncd hello-pluts\ngit remote remove origin\n"})}),"\n",(0,s.jsx)(n.p,{children:"this gives us a simple project structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"./hello-pluts\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 Introduction\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 contract.ts\n\u2502   \u251c\u2500\u2500 index.ts\n\u2502   \u251c\u2500\u2500 MyDatum\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2514\u2500\u2500 MyRedeemer\n\u2502       \u2514\u2500\u2500 index.ts\n\u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we only need to run ",(0,s.jsx)(n.code,{children:"npm install"})," to automatically add the ",(0,s.jsx)(n.code,{children:"plu-ts"})," library."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm install\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"et voil\xe0"})," we are ready to start!"]}),"\n",(0,s.jsx)(n.h2,{id:"the-contract",children:"The contract"}),"\n",(0,s.jsx)(n.h3,{id:"template-overview",children:"Template overview"}),"\n",(0,s.jsxs)(n.p,{children:["If we now navigate to ",(0,s.jsx)(n.code,{children:"src/contract.ts"})," we see we have a very simple validator already!"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:'import { Address, bool, compile, makeValidator, PaymentCredentials, pBool, pfn, Script, ScriptType, V2 } from "@harmoniclabs/plu-ts";\nimport MyDatum from "./MyDatum";\nimport MyRedeemer from "./MyRedeemer";\n\n\n// highlight-start\nexport const contract = pfn([\n    MyDatum.type,\n    MyRedeemer.type,\n    V2.PScriptContext.type\n],  bool)\n(( datum, redeemer, ctx ) =>\n    // always suceeds\n    pBool( true )\n);\n// highlight-end\n\n\n///////////////////////////////////////////////////////////////////\n// ------------------------------------------------------------- //\n// ------------------------- utilities ------------------------- //\n// ------------------------------------------------------------- //\n///////////////////////////////////////////////////////////////////\n\nexport const untypedValidator = makeValidator( contract );\n\nexport const compiledContract = compile( untypedValidator );\n\nexport const script = new Script(\n    ScriptType.PlutusV2,\n    compiledContract\n);\n\nexport const scriptMainnetAddr = new Address(\n    "mainnet",\n    new PaymentCredentials(\n        "script",\n        script.hash\n    )\n);\n\nexport const scriptTestnetAddr = new Address(\n    "testnet",\n    new PaymentCredentials(\n        "script",\n        script.hash.clone()\n    )\n);\n\nexport default contract;\n'})}),"\n",(0,s.jsx)(n.p,{children:"Let's focus only on the contract for now;"}),"\n",(0,s.jsxs)(n.p,{children:["this contract expects a ",(0,s.jsx)(n.code,{children:"MyDatum"}),", a ",(0,s.jsx)(n.code,{children:"MyRedeemer"})," and finally a ",(0,s.jsx)(n.code,{children:"PScriptContext"})," to validate a transaction."]}),"\n",(0,s.jsxs)(n.p,{children:["All of the three above are just ",(0,s.jsxs)(n.a,{href:"../onchain/Values/Structs/definition",children:[(0,s.jsx)(n.code,{children:"Struct"}),"s"]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MyDatum"})," and ",(0,s.jsx)(n.code,{children:"MyRedeemer"})," are types defined by us respectively in ",(0,s.jsx)(n.code,{children:"src/MyDatum/index.ts"})," and ",(0,s.jsx)(n.code,{children:"src/MyRedeemer/index.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/MyDatum/index.ts"',children:'import { int, pstruct } from "@harmoniclabs/plu-ts";\n\n// modify the Datum as you prefer\nconst MyDatum = pstruct({\n    Num: {\n        number: int\n    },\n    NoDatum: {}\n});\n\nexport default MyDatum;\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/MyRedeemer/index.ts"',children:'import { pstruct } from "@harmoniclabs/plu-ts";\n\n// modify the Redeemer as you prefer\nconst MyRedeemer = pstruct({\n    Option1: {},\n    Option2: {}\n});\n\nexport default MyRedeemer;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["whereas ",(0,s.jsx)(n.code,{children:"PScriptContext"})," is a predefined data structure that is passed by the ",(0,s.jsx)(n.code,{children:"cardano-node"})," itself that will run our smart contract."]}),"\n",(0,s.jsxs)(n.p,{children:["finally, the contract is used in ",(0,s.jsx)(n.code,{children:"src/index.ts"})," which is our entry point."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/index.ts"',children:'import { script } from "./contract";\n\nconsole.log("validator compiled succesfully! \ud83c\udf89\\n");\nconsole.log(\n    JSON.stringify(\n        script.toJson(),\n        undefined,\n        2\n    )\n);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["the index just imports ",(0,s.jsx)(n.code,{children:"script"})," from ",(0,s.jsx)(n.code,{children:"src/contract.ts"})," adn prints it out in the json form."]}),"\n",(0,s.jsxs)(n.p,{children:["if we go back to ",(0,s.jsx)(n.code,{children:"src/contract.ts"})," we see that the script is obtained using the following steps:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["adapting the validator to the standard using ",(0,s.jsx)(n.a,{href:"../onchain/API/utilities/makeValidator",children:(0,s.jsx)(n.code,{children:"makeValidator"})})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:"/* ... */\n\n// highlight-start\nexport const untypedValidator = makeValidator( contract );\n// highlight-end\n\nexport const compiledContract = compile( untypedValidator );\n\nexport const script = new Script(\n    ScriptType.PlutusV2,\n    compiledContract\n);\n\n/* ... */\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["compiling the validator with ",(0,s.jsx)(n.a,{href:"../onchain/API/utilities/compile",children:(0,s.jsx)(n.code,{children:"compile"})})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:"/* ... */\n\nexport const untypedValidator = makeValidator( contract );\n\n// highlight-start\nexport const compiledContract = compile( untypedValidator );\n// highlight-end\n\nexport const script = new Script(\n    ScriptType.PlutusV2,\n    compiledContract\n);\n\n/* ... */\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["wrapping it in a ",(0,s.jsx)(n.code,{children:"Script"})," that can be used offchain"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:"/* ... */\n\nexport const untypedValidator = makeValidator( contract );\n\nexport const compiledContract = compile( untypedValidator );\n\n// highlight-start\nexport const script = new Script(\n    ScriptType.PlutusV2,\n    compiledContract\n);\n// highlight-end\n\n/* ... */\n"})}),"\n",(0,s.jsx)(n.p,{children:"that is all we need for now."}),"\n",(0,s.jsx)(n.h3,{id:"run-the-template",children:"run the template"}),"\n",(0,s.jsx)(n.p,{children:"If we did every step of above correctly we should be able to run"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,s.jsx)(n.p,{children:"and the output should look like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'validator compiled succesfully! \ud83c\udf89\n\n{\n  "type": "PlutusScriptV2",\n  "description": "",\n  "cborHex": "56550100002225333573466644494400c0080045261601"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Well congratulations \ud83e\udd73!"}),"\n",(0,s.jsx)(n.p,{children:"this is your first compiled smart contract \ud83c\udf89!"}),"\n",(0,s.jsx)(n.p,{children:"But we won't stop here for sure!"}),"\n",(0,s.jsx)(n.p,{children:"Let's personalize this smart contract."}),"\n",(0,s.jsx)(n.h2,{id:"hello-plu-ts-1",children:"Hello plu-ts"}),"\n",(0,s.jsx)(n.p,{children:"We want to personalize the smart contract so that:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"it suceeds if the transaction is signed by us."}),"\n",(0,s.jsx)(n.li,{children:"and we are being polite by saluting the contract."}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"introduce-an-owner",children:["introduce an ",(0,s.jsx)(n.code,{children:"owner"})]}),"\n",(0,s.jsxs)(n.p,{children:["To make sure the transaction is signed by us we'll keep track of an ",(0,s.jsx)(n.code,{children:"owner"})," in the datum (the first argument we saw in the contract)."]}),"\n",(0,s.jsx)(n.admonition,{title:"datum",type:"tip",children:(0,s.jsx)(n.p,{children:"The datum helps us keep track of the history of the input the smart contract is validating."})}),"\n",(0,s.jsx)(n.p,{children:"Currently our datum is a struct, but it could be really anything;"}),"\n",(0,s.jsx)(n.p,{children:"and all we need to keep track of an owner is just a public key hash."}),"\n",(0,s.jsxs)(n.p,{children:["so in ",(0,s.jsx)(n.code,{children:"src/contract.ts"})," we'll change ",(0,s.jsx)(n.code,{children:"MyDatum"})," to ",(0,s.jsx)(n.code,{children:"PPubKeyHash"}),":"]}),"\n",(0,s.jsx)(n.admonition,{title:"PPubKeyHash",type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"PPubKeyHash"})," is just an ",(0,s.jsx)(n.a,{href:"../onchain/Values/aliases",children:(0,s.jsx)(n.code,{children:"Alias"})})," for bytestrings (of type ",(0,s.jsx)(n.code,{children:"bs"}),")"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:'import { Address, bool, compile, makeValidator, PaymentCredentials, pBool, pfn, Script, ScriptType, V2 } from "@harmoniclabs/plu-ts";\nimport MyDatum from "./MyDatum";\nimport MyRedeemer from "./MyRedeemer";\n\nconst contract = pfn([\n    // highlight-next-line\n    PPubKeyHash.type,\n    MyRedeemer.type,\n    V2.PScriptContext.type\n],  bool)\n// highlight-next-line\n// we should also change the name of the variable here\n// highlight-next-line\n// from `datum` to `owner`\n// highlight-next-line\n(( owner, redeemer, ctx ) =>\n    // always suceeds\n    pBool( true )\n);\n\n/* ... */\n'})}),"\n",(0,s.jsx)(n.h3,{id:"send-messages-to-the-contracts",children:"send messages to the contracts"}),"\n",(0,s.jsx)(n.p,{children:"The second condtion requires us to send some message to the contract."}),"\n",(0,s.jsx)(n.p,{children:"This is done thanks to the redeemer (or the second argument of a validator)."}),"\n",(0,s.jsx)(n.admonition,{title:"redeemer",type:"info",children:(0,s.jsx)(n.p,{children:"The redeemer is the argument specified by the user that interacts with the smart contract"})}),"\n",(0,s.jsxs)(n.p,{children:["once again, all we need in order to have a message is just a ",(0,s.jsx)(n.code,{children:"bytestring"}),", nothing more complex,"]}),"\n",(0,s.jsxs)(n.p,{children:["so we'll change ",(0,s.jsx)(n.code,{children:"MyRedeemer"})," to the primitive type ",(0,s.jsx)(n.code,{children:"bs"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:'import { Address, bool, compile, makeValidator, PaymentCredentials, pBool, pfn, Script, ScriptType, V2 } from "@harmoniclabs/plu-ts";\nimport MyDatum from "./MyDatum";\nimport MyRedeemer from "./MyRedeemer";\n\nconst contract = pfn([\n    PPubKeyHash.type,\n    // highlight-next-line\n    bs,\n    V2.PScriptContext.type\n],  bool)\n// highlight-start\n// we should also change the name of the variable here\n// from `redeemer` to `message`\n(( owner, message, ctx ) =>\n// highlight-end\n    // always suceeds\n    pBool( true )\n);\n\n/* ... */\n'})}),"\n",(0,s.jsx)(n.h3,{id:"implement-the-logic",children:"implement the logic"}),"\n",(0,s.jsx)(n.p,{children:"finally we'll check both the conditions in the body of the function."}),"\n",(0,s.jsx)(n.p,{children:"so we'll first create a term that checks that the message is the one expected:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const isBeingPolite = message.eq("Hello plu-ts");\n'})}),"\n",(0,s.jsx)(n.p,{children:"then we'll check that the transaction is signed by the owner specified in the datum."}),"\n",(0,s.jsx)(n.p,{children:"to do so we need informations about the tranasaction and who signed it."}),"\n",(0,s.jsxs)(n.p,{children:["all the informations about the tranasaction are in the ",(0,s.jsx)(n.code,{children:"tx"})," field of the ",(0,s.jsx)(n.a,{href:"/onchain/API/types/V3/ScriptContext/PScriptContext",children:(0,s.jsx)(n.code,{children:"PScriptContext"})})]}),"\n",(0,s.jsxs)(n.p,{children:["an in particular we are interested in the ",(0,s.jsxs)(n.a,{href:"../onchain/API/types/V3/ScriptContext/PTxInfo#signatories",children:[(0,s.jsx)(n.code,{children:"signatories"})," field"]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"ctx.tx.signatories;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["since this is a list of all the required singers we chan use all the ",(0,s.jsx)(n.a,{href:"../onchain/stdlib/TermList",children:(0,s.jsx)(n.code,{children:"TermList"})})," methods;\nof which ",(0,s.jsx)(n.a,{href:"../onchain/stdlib/TermList#some",children:(0,s.jsx)(n.code,{children:"some"})})," allows us to check that ",(0,s.jsx)(n.strong,{children:"at leat one"})," element of the list respects a given property:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const signedByOwner = ctx.tx.signatories.some( owner.eqTerm );\n"})}),"\n",(0,s.jsx)(n.p,{children:"and finally, we put all together"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/contract.ts"',children:'/* ... */\n\nconst contract = pfn([\n    PPubKeyHash.type,\n    bs,\n    V2.PScriptContext.type\n],  bool)\n(( owner, message, ctx ) => {\n\n    const isBeingPolite = message.eq("Hello plu-ts");\n\n    const signedByOwner = ctx.tx.signatories.some( owner.eqTerm );\n\n    return isBeingPolite.and( signedByOwner );\n});\n\n/* ... */\n'})}),"\n",(0,s.jsxs)(n.p,{children:["now runing the program with ",(0,s.jsx)(n.code,{children:"npm run start"})," gives us back:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'validator compiled succesfully! \ud83c\udf89\n\n{\n  "type": "PlutusScriptV2",\n  "description": "",\n  "cborHex": "58fd58fb0100003232323232323232323232222533357346664446600e66e3c00922010c48656c6c6f20706c752d74730013300823371e00200866014002464660180024640026601ceb8dd6180a0009aba1001375c0066eb800800452616225333573400400229408cc01c852891119802980200109801800912999ab9a00214a20024460026aae78dd5001119801000a5eb108c0088d5d01801000911980190801111198028011801800980091111919980398020009801800801198020018011191801119801001000918011198010010009112999aab9f001003133002357420026ae880048d5d09aba2357446ae88d5d11aba2357446ae88d5d100081"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"We did it! We wrote our first contract!"}),"\n",(0,s.jsx)(n.h2,{id:"deployng-the-contract",children:"Deployng the Contract"}),"\n",(0,s.jsx)(n.p,{children:"now that we have our personal contract we'll use [Koios] to help us with the offchain."}),"\n",(0,s.jsxs)(n.p,{children:["for better integration we can install the ",(0,s.jsx)(n.code,{children:"koios-pluts"})," package so that we can make requests to koios and have actual plu-ts values."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @harmoniclabs/koios-pluts\n"})}),"\n",(0,s.jsx)(n.p,{children:"eventually we'll also need some help with binary data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @harmoniclabs/uint8array-utils\n"})}),"\n",(0,s.jsxs)(n.p,{children:["then to keep the project clean we'll create a new ",(0,s.jsx)(n.code,{children:"offchain"})," folder, under ",(0,s.jsx)(n.code,{children:"src"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir src/offchain\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-the-koios-provider",children:"Create the Koios provider"}),"\n",(0,s.jsxs)(n.p,{children:["To make sure we do all our requests in testnet ",(0,s.jsx)(n.a,{href:"../tools/koios-pluts",children:(0,s.jsx)(n.code,{children:"koios-pluts"})})," exposes the utility class ",(0,s.jsx)(n.code,{children:"KoiosProvoder"}),"\nwhich will keep in mind the network we are operating in for us."]}),"\n",(0,s.jsx)(n.p,{children:"let's build an instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/offchain/koios.ts"',children:'import { KoiosProvider } from "@harmoniclabs/koios-pluts"\n\nexport const koios = new KoiosProvider("testnet");\n\nexport default koios;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"create-the-transaction-builder",children:"Create the transaction builder"}),"\n",(0,s.jsxs)(n.p,{children:["To build a ",(0,s.jsx)(n.a,{href:"../offchain/TxBuilder%20API/TxBuilder",children:(0,s.jsx)(n.code,{children:"TxBuilder"})})," we'll need to fetch the current protocol parameters, that is an asyncronous operation;"]}),"\n",(0,s.jsx)(n.p,{children:"so we'll write an asnyc function that constructs our transaction builder:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/offchain/getTxBuilder.ts"',children:'import { koios } from "./koios"\n\n/**\n * we don\'t want to do too many API call if we already have our `txBuilder`\n * \n * so after the first call we\'ll store a copy here.\n**/\nlet _cachedTxBuilder: TxBuilder | undefined = undefined\n\nexport default async function getTxBuilder(): Promise<TxBuilder>\n{\n    if(!( _cachedTxBuilder instanceof TxBuilder ))\n    _cachedTxBuilder = new TxBuilder(\n        "testnet",\n        await koios.epoch.protocolParams() // defaults to current epoch\n    );\n\n    return _cachedTxBuilder;\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get-some-founds",children:"get some founds"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.a,{href:"https://docs.cardano.org/cardano-testnet/tools/faucet",children:"Cardano Testnet Faucet"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Just be sure to select the ",(0,s.jsx)(n.strong,{children:"Preprod"})," testnet."]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.mdxAdmonitionTitle,{children:[(0,s.jsx)(n.code,{children:"cardano-cli"})," and address generation"]}),(0,s.jsxs)(n.p,{children:["If you are in a server environment (such as ",(0,s.jsx)(n.a,{href:"https://nodejs.org/en/",children:"NodeJS"}),", ",(0,s.jsx)(n.a,{href:"https://deno.land/",children:"Deno"})," or ",(0,s.jsx)(n.a,{href:"https://bun.sh/",children:"Bun"}),")\nyou can generate a testnet address by frist running"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cardano-cli address key-gen \\\n    --verification-key-file path/to/pubKey.vkey \\\n    --signing-key-file path/to/privKey.skey\n"})}),(0,s.jsx)(n.p,{children:"and then using the verification key (public key) to generate an address."}),(0,s.jsxs)(n.p,{children:["This can be done both using ",(0,s.jsx)(n.code,{children:"cardano-cli"})," or using ",(0,s.jsx)(n.code,{children:"plu-ts"})," itself"]}),(0,s.jsxs)(i.c,{children:[(0,s.jsx)(a.c,{value:"plu-ts",label:"plu-ts",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const myTestnetAddress = new Address(\n    "testnet",\n    new PaymentCredentials(\n        "pubKey",\n        PublicKey.fromCbor(\n            JSON.parse( // the result of `cardano-cli` is a json file\n                readFileSync(\n                    "path/to/pubKey.vkey",\n                    { encoding: "utf8" }\n                ) \n            ).cborHex\n        ).hash\n    )\n)\n'})})}),(0,s.jsx)(a.c,{value:"cardano-cli",label:"cardano-cli",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cardano-cli address build \\\n    --payment-verification-key-file path/to/pubKey.vkey \\\n    --testnet-magic 1\n"})})})]})]}),"\n",(0,s.jsxs)(n.admonition,{title:"return the test ADA",type:"caution",children:[(0,s.jsx)(n.p,{children:"once you finish with your tADA make sure to return them to the faucet."}),(0,s.jsx)(n.p,{children:"tADA have no real world value but are still limited, and onther developers will need them!"}),(0,s.jsx)(n.p,{children:"to return tADA to the faucet just send them to the following testnet address:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"addr_test1qqr585tvlc7ylnqvz8pyqwauzrdu0mxag3m7q56grgmgu7sxu2hyfhlkwuxupa9d5085eunq2qywy7hvmvej456flknswgndm3"})})]}),"\n",(0,s.jsx)(n.h3,{id:"build-the-deploy-transaction",children:"build the deploy transaction"}),"\n",(0,s.jsxs)(n.p,{children:["now that we have received our ",(0,s.jsx)(n.code,{children:"tADA"})," we can start playng."]}),"\n",(0,s.jsx)(n.p,{children:"Firs we need to access them in our code."}),"\n",(0,s.jsx)(n.p,{children:"We can do so by querying the utxos at the address you received the tADA to."}),"\n",(0,s.jsx)(n.p,{children:"since we'll query our utxos some times we make an utility function for that."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/offchain/queryMyUtxos.ts"',children:'import type { UTxO } from "@harmoniclabs/plu-ts"\nimport { koios } from "./koios";\n\nexport default async function queryMyUtxos(): Promise<UTxO[]>\n{\n    return await koios.address.utxos( "<paste your tesnet address here>" )\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"now that we can access our utxos we can finally start building transactions."}),"\n",(0,s.jsx)(n.p,{children:"The first transaction we want to do is to deploy the smart contract and found it."}),"\n",(0,s.jsx)(n.p,{children:"Let's check we got everything:"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","smart contract"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.code,{children:"TxBuilder"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","A way to comunicate with the blockchain"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"yes, we can go!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/offchain/getDeployAndFoundTx.ts"',children:'import { Address, Value, DataB, Script, Tx } from "@harmoniclabs/plu-ts"\nimport { scriptTestnetAddr } from "../contract";\nimport getTxBuilder from "./getTxBuilder";\nimport queryMyUtxos from "./queryMyUtxos";\n\n\nexport default async function getDeployAndFoundTx( script: Script ): Promise<Tx>\n{\n    const txBuilder = await getTxBuilder();\n    const myUTxOs = await queryMyUtxos();\n\n    return txBuilder.buildSync({\n        inputs: [{ utxo: myUTxOs[0] }],\n        outputs: [\n            { // output which holds the reference script\n                address: scriptTestnetAddr,\n                value: Value.lovelaces( 10_000_000 ),\n                // an utxo with no datum that sits \n                // that a script address (like in this case)\n                // is locked FOREVER\n                // this way no one will be able to "un-deploy" our smart contract\n                datum: undefined,\n                refScript: script\n            },\n            { // output holding the founds that we\'ll spend later\n                address: scriptTestnetAddr,\n                value: Value.lovelaces( 10_000_000 ),\n                // remeber to include a datum\n                datum: new DataB(\n                    // remember we set the datum to be the public key hash?\n                    // we can extract it from the address as follows\n\n                    // first create an address form the bech32 form\n                    Address.fromString( "<paste your address here>" )\n                    // then extract the pyament credential hash\n                    .paymentCreds.hash.toBuffer()\n                )\n            }\n        ],\n        // send everything left back to us\n        changeAddress: "<paste your address here>"\n    });\n\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["now that we have a ",(0,s.jsx)(n.code,{children:"Tx"})," we are just two steps away from it to be registered on-chain:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"sign it"}),"\n",(0,s.jsx)(n.li,{children:"submit it"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sign-the-deploy-transaction",children:"sign the deploy transaction"}),"\n",(0,s.jsx)(n.p,{children:"to sign a transaciton you'll need the private key of your address."}),"\n",(0,s.jsx)(n.p,{children:"depending on your environment then there are two ways to sign it:"}),"\n",(0,s.jsxs)(i.c,{children:[(0,s.jsxs)(a.c,{value:"Browser",label:"Browser",default:!0,children:[(0,s.jsxs)(n.p,{children:["In the browser we can use the ",(0,s.jsx)(n.a,{href:"https://github.com/cardano-foundation/CIPs/tree/master/CIP-0030#apisigntxtx-cbortransaction-partialsign-bool--false-promisecbortransaction_witness_set",children:"CIP-0030"}),"\nstandard to sign the transaction."]}),(0,s.jsx)(n.p,{children:"the standard wants us to pass the CBOR of the transaction encoded as hex string."}),(0,s.jsx)(n.p,{children:"that is not a problem because we can get it as follows:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"tx.toCbor().toString()\n"})}),(0,s.jsx)(n.p,{children:"it then returns a new CBOR encoded as hex string which represents the signature."}),(0,s.jsx)(n.p,{children:"we can add the signature to our transaction as follows:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const witnessSet = TxWitnessSet.fromCbor(\n    \"<CIP-0030 'signTx' result here>\"\n);\n\nfor(const vkeyWit of witnessSet.vkeyWitnesses)\n{\n    tx.addVKeyWitness( vkeyWit )\n}\n"})}),(0,s.jsx)(n.p,{children:"so all together becomes"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"async function signWithBrowser( tx: Tx, cip30wallet: any ): void\n{\n    const witnessSet = TxWitnessSet.fromCbor(\n        await cip30wallet.signTx(\n            tx.toCbor().toString()\n        )\n    );\n\n    for(const vkeyWit of witnessSet.vkeyWitnesses)\n    {\n        tx.addVKeyWitness( vkeyWit )\n    }\n}\n"})})]}),(0,s.jsxs)(a.c,{value:"NodeJS / Server",label:"NodeJS / Server",children:[(0,s.jsx)(n.p,{children:"If we are in a server environmet is very likely we have our private key stored in some file."}),(0,s.jsx)(n.p,{children:"so we can just read the private key from there."}),(0,s.jsxs)(n.p,{children:["Once we have teh private key we can then use it to sign the transaction; ",(0,s.jsx)(n.code,{children:"plu-ts"})," handles the cryptography"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"tx.signWith( privateKey )\n"})}),(0,s.jsx)(n.p,{children:"and that's it"}),(0,s.jsx)(n.p,{children:"so the final code is:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'function signWithServer( tx: Tx ): void\n{\n    tx.signWith(\n        PrivateKey.fromCbor(\n            JSON.parse( // the result of `cardano-cli` is a json file\n                readFileSync(\n                    "path/to/privKey.skey",\n                    { encoding: "utf8" }\n                ) \n            ).cborHex\n        )\n    );\n}\n'})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"submit-the-deploy-transaction",children:"submit the deploy transaction"}),"\n",(0,s.jsx)(n.p,{children:"now we can finally deploy the smart contract all we need to do is just call the koios endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/index.ts"',children:'/* onther imports */\nimport { koios } from "./offchain/koios"\n\n/* ... */\n\nasync function main()\n{\n    let tx = await getDeployAndFoundTx( script );\n    signWithServer( tx );\n    await koios.tx.submit( tx );\n}\nmain();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"using-the-contract",children:"Using the Contract"}),"\n",(0,s.jsx)(n.p,{children:"The last step is to build a new trasaction that will allow us to spend the founds we sent to the contract."}),"\n",(0,s.jsx)(n.h3,{id:"get-the-reference-utxo",children:"get the reference UTxO"}),"\n",(0,s.jsx)(n.p,{children:"Apart for this step the process very similar."}),"\n",(0,s.jsx)(n.p,{children:"If you remember we deployed our script to an UTxO that is locked forever."}),"\n",(0,s.jsx)(n.p,{children:"We need that UTxO to interact with the contract."}),"\n",(0,s.jsx)(n.p,{children:"we could query but we already have all the infos to build it ourselves."}),"\n",(0,s.jsxs)(n.p,{children:["an ",(0,s.jsx)(n.code,{children:"UTxO"})," is composed by a ",(0,s.jsx)(n.code,{children:"TxOutRef"})," and a ",(0,s.jsx)(n.code,{children:"TxOut"})]}),"\n",(0,s.jsxs)(n.p,{children:["the ",(0,s.jsx)(n.code,{children:"TxOutRef is just the hash of the "}),"Tx` that generated it and the index in the order of the outputs."]}),"\n",(0,s.jsxs)(n.p,{children:["so our ",(0,s.jsx)(n.code,{children:"TxOutRef"})," is:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const txOutRef = new TxOutRef({\n    id: tx.hash,\n    index: 0\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["and the ",(0,s.jsx)(n.code,{children:"TxOut"})," is the resolved reference, and we know exactly what's on that utxo:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const txOut = new TxOut({\n    address: scriptTestnetAddr,\n    value: Value.lovelaces( 10_000_000 ),\n    refScript: script\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"so our reference utxo is"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const myRefUtxo = new UTxO({\n    utxoRef: txOutRef,\n    resolved: txOut\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"build-the-transaction",children:"build the transaction"}),"\n",(0,s.jsx)(n.p,{children:"with that utxo reference we can build our tranasction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/offchain/getSpendPoliteTx.ts"',children:'import { DataB, isData, Hash32, Tx, UTxO } from "@harmoniclabs/plu-ts"\nimport { scriptTestnetAddr } from "../contract";\nimport * as uint8array from "@harmoniclabs/uint8array-utils";\nimport koios from "./koios";\nimport getTxBuilder from "./getTxBuilder";\nimport queryMyUtxos from "./queryMyUtxos";\n\n\nexport default async function getSpendPoliteTx( myRefUtxo: UTxO ): Promise<Tx>\n{\n    const txBuilder = await getTxBuilder();\n    const myUTxOs = await queryMyUtxos();\n\n    // find the other utxo of the previous tx\n    const utxoToSpend = (await koios.address.utxos( scriptTestnetAddr ))\n        .find( utxo => isData( utxo.resolved.datum ) );\n\n    if( utxoToSpend === undefined )\n    {\n        throw "uopsie, are you sure your tx had enough time to get to the blockchain?"\n    }\n\n    return txBuilder.buildSync({\n        inputs: [\n            {\n                utxo: utxoToSpend,\n                // we must include the utxo that holds our script\n                referenceScriptV2: {\n                    refUtxo: myRefUtxo,\n                    datum: "inline", // the datum is present already on `utxoToSpend`\n                    redeemer: new DataB( uint8array.fromAscii("Hello plu-ts") ) // be polite\n                }\n            }\n        ],\n        // make sure to include collateral when using contracts\n        collaterals: [ myUTxOs[0] ],\n        // send everything back to us\n        changeAddress: "addr_test1vpv03vsr8mtgu7sftu82x0y3nmv4fs6xnkw5jvrkw3luw3ck4hmfa"\n    });\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sign-and-submit",children:"sign and submit"}),"\n",(0,s.jsx)(n.p,{children:"We can re use the fuctions defined above for both signing and submission."}),"\n",(0,s.jsx)(n.p,{children:"so all we need to do now is really just put everything together"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="src/index.ts"',children:'import { script, scriptTestnetAddr } from "./contract";\nimport { koios } from "./offchain/koios";\n\n/* ... */\n\nasync main()\n{\n    let tx = await getDeployAndFoundTx( script );\n    await signTxServer( tx );\n    await koios.tx.submit( tx );\n\n    // highlight-start\n    console.log( "waiting for tx \'" + tx.hash.toString() + "\' to be on-chain...")\n    await koios.tx.waitConfirmed( tx );\n\n    const myRefUtxo = new UTxO({\n        utxoRef: new TxOutRef({\n            id: tx.hash,\n            index: 0\n        }),\n        resolved: new TxOut({\n            address: scriptTestnetAddr,\n            value: Value.lovelaces( 10_000_000 ),\n            refScript: script\n        })\n    });\n\n    tx = await getSpendPoliteTx( myRefUtxo )\n    signWithServer( tx );\n    await koios.tx.submit( tx );\n\n    console.log( "waiting for tx \'" + tx.hash.toString() + "\' to be on-chain...\\n\\n")\n    await koios.tx.waitConfirmed( tx );\n\n    console.log(\n        `Unlocked ${\n            tx.body.inputs[0].resolved.value.lovelaces / BigInt(1_000_00)\n        } tADA ` +\n        `from ${scriptTestnetAddr.toString()}!\\n\\n` +\n        `Check the transaction on Cardanoscan: https://preview.cardanoscan.io/transaction/${tx.hash.toString()}?tab=contracts`\n    )\n    // highlight-end\n}\nmain();\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If everything whent trough correctly running the program wiht ",(0,s.jsx)(n.code,{children:"npm run start"})," should now show something like:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Unlocked 10 tADA from addr_test1vabcd... !\n\nCheck the transaction on Cardanoscan: https://preview.cardanoscan.io/transaction/beefcaffee...?tab=contracts\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"return-the-tada",children:["Return the ",(0,s.jsx)(n.code,{children:"tADA"})]}),"\n",(0,s.jsxs)(n.p,{children:["When you are done playing the testnet be sure to return your ",(0,s.jsx)(n.code,{children:"tADA"})," to the faucet."]}),"\n",(0,s.jsx)(n.p,{children:"Here, as a bonus you can build the transaction yourself!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const returnTADA = txBuilder.buildSync({\n    inputs: \n        (await koios.address.utxos("<paste your address here>"))\n        .map( utxo => ({ utxo }) ) // wrap in the expected input format\n    // the faucet address\n    changeAddress: "addr_test1qqr585tvlc7ylnqvz8pyqwauzrdu0mxag3m7q56grgmgu7sxu2hyfhlkwuxupa9d5085eunq2qywy7hvmvej456flknswgndm3"\n})\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},87768:(e,n,t)=>{t.d(n,{c:()=>a});t(11504);var s=t(65456);const r={tabItem:"tabItem_Ymn6"};var i=t(17624);function a(e){let{children:n,hidden:t,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.c)(r.tabItem,a),hidden:t,children:n})}},61268:(e,n,t)=>{t.d(n,{c:()=>v});var s=t(11504),r=t(65456),i=t(53943),a=t(55592),o=t(95288),l=t(10632),c=t(27128),d=t(21148);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,c.w)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.Uz)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._M)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[a,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,h]=x({queryString:t,groupId:r}),[m,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,d.IN)(t);return[r,(0,s.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),j=(()=>{const e=c??m;return p({value:e,tabValues:i})?e:null})();(0,o.c)((()=>{j&&l(j)}),[j]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),g(e)}),[h,g,i]),tabValues:i}}var g=t(93664);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(17624);function y(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.MV)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=o[t].value;r!==s&&(c(n),a(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.c)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...i,className:(0,r.c)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function b(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,r.c)("tabs-container",j.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(w,{...n,...e})]})}function v(e){const n=(0,g.c)();return(0,f.jsx)(b,{...e,children:h(e.children)},String(n))}},4552:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>a});var s=t(11504);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);