"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[9481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:8},i="TermStruct<StructDef>",c={unversionedId:"onchain/stdlib/TermStruct<StructDef>",id:"onchain/stdlib/TermStruct<StructDef>",title:"TermStruct<StructDef>",description:"TermStruct is an other type that is unnecessarely complicated.",source:"@site/docs/onchain/stdlib/TermStruct<StructDef>.mdx",sourceDirName:"onchain/stdlib",slug:"/onchain/stdlib/TermStruct<StructDef>",permalink:"/docs/onchain/stdlib/TermStruct<StructDef>",draft:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts/tree/main/packages/create-docusaurus/templates/shared/docs/onchain/stdlib/TermStruct<StructDef>.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"TermFn<PIns[],POut>",permalink:"/docs/onchain/stdlib/TermFn<PIns,POut>"},next:{title:"API",permalink:"/docs/category/api"}},l={},s=[{value:"<code>eq</code>",id:"eq",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"termstructstructdef"},(0,a.kt)("inlineCode",{parentName:"h1"},"TermStruct<StructDef>")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"TermStruct")," is an other type that is unnecessarely complicated."),(0,a.kt)("p",null,"This time because it has to mess around with the struct definition;\nbut even so the type definition should not be that hard to understand if we know what is doing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type StructInstance<SCtorDef extends StructCtorDef> = {\n    readonly [Field in keyof SCtorDef]: UtilityTermOf<ToPType<SCtorDef[Field]>>\n}\n\ntype TermStruct<SDef extends StructDefinition> = Term<PStruct<SDef>> & {\n    \n    readonly eqTerm: TermFn<[PStruct<SDef>], PBool>\n    readonly eq: ( other: Term<PStruct<SDef>> ) => TermBool\n\n} & \n    IsSingelKey<SDef> extends true ? StructInstance<SDef[keyof SCtorDef]> : {};\n")),(0,a.kt)("p",null,"even with these semplifications it might seem a bit complex but really all is telling us is that it adds the struct properties (trough ",(0,a.kt)("inlineCode",{parentName:"p"},"Structinstance"),")\n",(0,a.kt)("em",{parentName:"p"},"only if")," the struct can only have one single constructor; and adds nothing if it has more."),(0,a.kt)("p",null,"Infact we already encountered ",(0,a.kt)("a",{parentName:"p",href:"../Control%20Flow/pmatch"},"this method while introducing ",(0,a.kt)("inlineCode",{parentName:"a"},"pmatch")),"; we just didn't know that it was an utility term."),(0,a.kt)("p",null,"it then adds the ",(0,a.kt)("inlineCode",{parentName:"p"},"eq")," method regardles of the struct definition."),(0,a.kt)("h2",{id:"eq"},(0,a.kt)("inlineCode",{parentName:"h2"},"eq")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"eq")),(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PStruct<SDef>>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"peqData.$( term as any ).$( other  as any )\n"))),(0,a.kt)("p",null,"data equality"))}d.isMDXComponent=!0}}]);