"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[5592],{30736:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var r=n(17624),d=n(4552);const i={title:"IProvider",sidebar_position:1},o=void 0,l={id:"offchain/TxBuilderRunner API/IProvider",title:"IProvider",description:"ITxRunnerProvider",source:"@site/docs/offchain/TxBuilderRunner API/IProvider.mdx",sourceDirName:"offchain/TxBuilderRunner API",slug:"/offchain/TxBuilderRunner API/IProvider",permalink:"/offchain/TxBuilderRunner API/IProvider",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/offchain/TxBuilderRunner API/IProvider.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"IProvider",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"TxBuilderRunner",permalink:"/offchain/TxBuilderRunner API/TxBuilderRunner"},next:{title:"build",permalink:"/offchain/TxBuilderRunner API/build"}},c={},a=[{value:"<code>ITxRunnerProvider</code>",id:"itxrunnerprovider",level:2},{value:"<code>ITxRunnerProvider</code> methods",id:"itxrunnerprovider-methods",level:3},{value:"<code>IProvider</code>",id:"iprovider",level:2},{value:"<code>IGetGenesisInfos</code>",id:"igetgenesisinfos",level:3},{value:"<code>IGetProtocolParameters</code>",id:"igetprotocolparameters",level:3},{value:"<code>IResolveUTxOs</code>",id:"iresolveutxos",level:3},{value:"<code>IResolveDatumHashes</code>",id:"iresolvedatumhashes",level:3},{value:"<code>ISubmitTx</code>",id:"isubmittx",level:3},{value:"<code>ISignTx</code>",id:"isigntx",level:3},{value:"<code>IGetChangeAddress</code>",id:"igetchangeaddress",level:3},{value:"methods",id:"methods",level:2},{value:"<code>getGenesisInfos</code>",id:"getgenesisinfos",level:3},{value:"<code>getProtocolParameters</code>",id:"getprotocolparameters",level:3},{value:"<code>resolveUtxos</code>",id:"resolveutxos",level:3},{value:"<code>resolveDatumHashes</code>",id:"resolvedatumhashes",level:3},{value:"<code>getChangeAddress</code>",id:"getchangeaddress",level:3}];function t(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"itxrunnerprovider",children:(0,r.jsx)(s.code,{children:"ITxRunnerProvider"})}),"\n",(0,r.jsxs)(s.p,{children:["Only a subset of a ",(0,r.jsx)(s.a,{href:"#iprovider",children:(0,r.jsx)(s.code,{children:"IProvider"})})," methods might be needed by a ",(0,r.jsx)(s.a,{href:"../TxBuilderRunner%20API/TxBuilderRunner",children:(0,r.jsx)(s.code,{children:"TxBuilderRunner"})}),";"]}),"\n",(0,r.jsxs)(s.p,{children:["so here is the ",(0,r.jsx)(s.code,{children:"ITxRunnerProvider"})," interface:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface ITxRunnerProvider extends\n    IGetGenesisInfos,\n    IResolveUTxOs,\n    IResolveDatumHashes,\n    Partial<IGetChangeAddress>\n{}\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"itxrunnerprovider-methods",children:[(0,r.jsx)(s.code,{children:"ITxRunnerProvider"})," methods"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#getgenesisinfos",children:(0,r.jsx)(s.code,{children:"getGenesisInfos"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#resolveutxos",children:(0,r.jsx)(s.code,{children:"resolveUtxos"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#resolvedatumhashes",children:(0,r.jsx)(s.code,{children:"resolveDatumHashes"})})}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"optionally:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#getchangeaddress",children:(0,r.jsx)(s.code,{children:"getChangeAddress"})})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"iprovider",children:(0,r.jsx)(s.code,{children:"IProvider"})}),"\n",(0,r.jsx)(s.p,{children:"definition:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IProvider extends\n    IGetGenesisInfos,\n    IGetProtocolParameters,\n    IResolveUTxOs, \n    IResolveDatumHashes, \n    ISubmitTx,\n    ISignTx,\n    Partial<IGetChangeAddress>\n{}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"igetgenesisinfos",children:(0,r.jsx)(s.code,{children:"IGetGenesisInfos"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IGetGenesisInfos {\n    getGenesisInfos: () => Promise<GenesisInfos>\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"igetprotocolparameters",children:(0,r.jsx)(s.code,{children:"IGetProtocolParameters"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IGetProtocolParameters {\n    getProtocolParameters: () => Promise<ProtocolParameters>\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"iresolveutxos",children:(0,r.jsx)(s.code,{children:"IResolveUTxOs"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IResolveUTxOs {\n    resolveUtxos: ( utxos: CanResolveToUTxO[] ) => Promise<UTxO[]>,\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"iresolvedatumhashes",children:(0,r.jsx)(s.code,{children:"IResolveDatumHashes"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IResolveDatumHashes {\n    resolveDatumHashes: ( hashes: Hash32[] ) => Promise<{\n        hash: string,\n        datum: CanBeData \n    }[]>\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"isubmittx",children:(0,r.jsx)(s.code,{children:"ISubmitTx"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface ISubmitTx {\n    submitTx: ( txCBOR: string ) => Promise<string> \n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"isigntx",children:(0,r.jsx)(s.code,{children:"ISignTx"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface ISignTx {\n    signTx: ( txCBOR: string ) => Promise<string> \n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"igetchangeaddress",children:(0,r.jsx)(s.code,{children:"IGetChangeAddress"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"interface IGetChangeAddress {\n    getChangeAddress: () => Promise<AddressStr | Address>\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"methods"}),"\n",(0,r.jsx)(s.h3,{id:"getgenesisinfos",children:(0,r.jsx)(s.code,{children:"getGenesisInfos"})}),"\n",(0,r.jsxs)(s.p,{children:["returns: ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.a,{href:"../miscellaneous/GenesisInfos",children:(0,r.jsx)(s.code,{children:"GenesisInfos"})}),">"]}),"\n",(0,r.jsx)(s.p,{children:"used to query genesis infos if none are already present."}),"\n",(0,r.jsxs)(s.p,{children:["genesis infos are only needed in case ",(0,r.jsx)(s.a,{href:"../TxBuilder%20API/buildSync#invalidbefore",children:(0,r.jsx)(s.code,{children:"invalidBefore"})}),"\nor ",(0,r.jsx)(s.a,{href:"../TxBuilder%20API/buildSync#invalidafter",children:(0,r.jsx)(s.code,{children:"invalidAfter"})})," are used."]}),"\n",(0,r.jsx)(s.p,{children:"not needed otherwise."}),"\n",(0,r.jsx)(s.h3,{id:"getprotocolparameters",children:(0,r.jsx)(s.code,{children:"getProtocolParameters"})}),"\n",(0,r.jsxs)(s.p,{children:["returns: ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/interfaces/ProtocolParameters",children:(0,r.jsx)(s.code,{children:"ProtocolParameters"})}),">"]}),"\n",(0,r.jsx)(s.p,{children:"utility method of a provider to query protocol parameters."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsxs)(s.strong,{children:["NOT REQUIRED by ",(0,r.jsx)(s.a,{href:"#itxrunnerprovider",children:(0,r.jsx)(s.code,{children:"ITxRunnerProvider"})})]}),";"]}),"\n",(0,r.jsx)(s.h3,{id:"resolveutxos",children:(0,r.jsx)(s.code,{children:"resolveUtxos"})}),"\n",(0,r.jsxs)(s.p,{children:["argument: ",(0,r.jsx)(s.a,{href:"../miscellaneous/CanResolveToUTxO",children:(0,r.jsx)(s.code,{children:"CanResolveToUTxO"})}),"[]"]}),"\n",(0,r.jsxs)(s.p,{children:["returns: ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/classes/UTxO",children:(0,r.jsx)(s.code,{children:"UTxO"})}),"[]>"]}),"\n",(0,r.jsxs)(s.p,{children:["given an array of utxo references to resolve expects an array of ",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/classes/UTxO",children:(0,r.jsx)(s.code,{children:"UTxO"})}),"s back."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.a,{href:"../TxBuilderRunner%20API/TxBuilderRunner",children:(0,r.jsx)(s.code,{children:"TxBuilderRunner"})})," instance won't require this method\n",(0,r.jsx)(s.strong,{children:"if"})," the utxos needed:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["are already provided as ",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/classes/UTxO",children:(0,r.jsx)(s.code,{children:"UTxO"})})," useAllPluginInstancesData,"]}),"\n",(0,r.jsxs)(s.li,{children:["or already satisfy the ",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/interfaces/IUTxO",children:(0,r.jsx)(s.code,{children:"IUTxO"})})," interface."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"resolvedatumhashes",children:(0,r.jsx)(s.code,{children:"resolveDatumHashes"})}),"\n",(0,r.jsxs)(s.p,{children:["argument: ",(0,r.jsx)(s.a,{href:"../cardano-ledger-ts/classes/Hash32",children:(0,r.jsx)(s.code,{children:"Hash32"})}),"[]; hashes of the datums to be resolved"]}),"\n",(0,r.jsxs)(s.p,{children:["returns: ",(0,r.jsx)(s.code,{children:"Promise"}),"<{ hash: ",(0,r.jsx)(s.code,{children:"string"}),", datum: ",(0,r.jsx)(s.a,{href:"../miscellaneous/CanBeData",children:(0,r.jsx)(s.code,{children:"CanBeData"})})," }[]>"]}),"\n",(0,r.jsx)(s.p,{children:"given an array of datum hashes queries the respective datums."}),"\n",(0,r.jsx)(s.p,{children:"only needed if no datum for a given hash is known."}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.a,{href:"../TxBuilderRunner%20API/TxBuilderRunner",children:(0,r.jsx)(s.code,{children:"TxBuilderRunner"})})," instance\nwon't require this method ",(0,r.jsx)(s.strong,{children:"if"})," all the datums are provided as ",(0,r.jsx)(s.a,{href:"../plutus-data/type-aliases/Data",children:(0,r.jsx)(s.code,{children:"Data"})})]}),"\n",(0,r.jsx)(s.h3,{id:"getchangeaddress",children:(0,r.jsx)(s.code,{children:"getChangeAddress"})}),"\n",(0,r.jsxs)(s.p,{children:["provides a default ",(0,r.jsx)(s.code,{children:"changeAddress"})," if none is specified."]})]})}function h(e={}){const{wrapper:s}={...(0,d.M)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},4552:(e,s,n)=>{n.d(s,{I:()=>l,M:()=>o});var r=n(11504);const d={},i=r.createContext(d);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);