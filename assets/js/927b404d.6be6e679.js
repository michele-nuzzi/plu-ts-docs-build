"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[47484],{73631:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var i=t(17624),s=t(4552);const o={sidebar_position:5},r="PExtended",d={id:"onchain/API/types/V1/Interval/PExtended",title:"PExtended",description:"Represents an extended type that could either be a finite value or positive/negative infinity. It is used to generalize interval boundaries.",source:"@site/docs/onchain/API/types/V1/Interval/PExtended.mdx",sourceDirName:"onchain/API/types/V1/Interval",slug:"/onchain/API/types/V1/Interval/PExtended",permalink:"/onchain/API/types/V1/Interval/PExtended",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/API/types/V1/Interval/PExtended.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"PBound",permalink:"/onchain/API/types/V1/Interval/PBound"},next:{title:"PInterval",permalink:"/onchain/API/types/V1/Interval/PInterval"}},c={},a=[{value:"<code>PNegInf</code>",id:"pneginf",level:2},{value:"<code>PFinite</code>",id:"pfinite",level:2},{value:"<code>PPosInf</code>",id:"pposinf",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"pextended",children:(0,i.jsx)(n.code,{children:"PExtended"})}),"\n",(0,i.jsx)(n.p,{children:"Represents an extended type that could either be a finite value or positive/negative infinity. It is used to generalize interval boundaries."}),"\n",(0,i.jsx)(n.p,{children:"Definition:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { palias } from "../../../PTypes/PAlias/palias";\nimport { pstruct } from "../../../PTypes/PStruct/pstruct";\nimport { pfn } from "../../../lib/pfn";\nimport { pInt } from "../../../lib/std/int";\nimport { int } from "../../../type_system";\n\nexport const PExtended = pstruct({\n    PNegInf: {},\n    PFinite: { n: int },\n    PPosInf: {}\n});\n\n\nconst PPOSIXTime = palias( int )\n\nPPOSIXTime.from( pInt( 1 ) )\n'})}),"\n",(0,i.jsx)(n.h2,{id:"pneginf",children:(0,i.jsx)(n.code,{children:"PNegInf"})}),"\n",(0,i.jsx)(n.p,{children:"Represents negative infinity"}),"\n",(0,i.jsx)(n.h2,{id:"pfinite",children:(0,i.jsx)(n.code,{children:"PFinite"})}),"\n",(0,i.jsx)(n.p,{children:"Represents a finite value."}),"\n",(0,i.jsx)(n.h2,{id:"pposinf",children:(0,i.jsx)(n.code,{children:"PPosInf"})}),"\n",(0,i.jsx)(n.p,{children:"Represents positive infinity"})]})}function l(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>d,M:()=>r});var i=t(11504);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);