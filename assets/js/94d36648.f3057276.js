"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[22264],{36884:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=n(17624),a=n(4552);const o={sidebar_position:1},s="makeValidator",r={id:"onchain/API/utilities/makeValidator",title:"makeValidator",description:"This method is deprecated as of Plutus V3",source:"@site/docs/onchain/API/utilities/makeValidator.mdx",sourceDirName:"onchain/API/utilities",slug:"/onchain/API/utilities/makeValidator",permalink:"/onchain/API/utilities/makeValidator",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/API/utilities/makeValidator.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"compile",permalink:"/onchain/API/utilities/compile"},next:{title:"makeRedeemerValidator",permalink:"/onchain/API/utilities/makeRedeemerValidator"}},d={},c=[{value:"errorMessage",id:"errormessage",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,a.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"makevalidator",children:(0,i.jsx)(t.code,{children:"makeValidator"})}),"\n",(0,i.jsx)(t.admonition,{title:"[!CAUTION]",type:"caution",children:(0,i.jsx)(t.p,{children:"This method is deprecated as of Plutus V3"})}),"\n",(0,i.jsxs)(t.p,{children:["Once on-chain contracts are not typed. Instead they only receive generic ",(0,i.jsx)(t.code,{children:"data"})," arguments."]}),"\n",(0,i.jsxs)(t.p,{children:["This is why ",(0,i.jsx)(t.code,{children:"makeValidator"})," exists."]}),"\n",(0,i.jsx)(t.p,{children:"The type signature is not too complicated:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"export function makeValidator(\n    typedValidator: Term<\n        PLam<\n            PType,\n            PLam<\n                PType,\n                PLam<\n                    typeof PScriptContext, \n                    PBool\n                >\n            >\n        >\n    >,\n    errorMessage?: string\n): TermFn<[PData,PData,PData], PUnit>\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"As you can see it takes any typed validator and returns a generic untyped validator so that the node will be able to evaluate it correctly."}),"\n",(0,i.jsxs)(t.admonition,{type:"caution",children:[(0,i.jsxs)(t.mdxAdmonitionTitle,{children:["use ",(0,i.jsx)(t.code,{children:"makeValidator"})," only for spending scripts"]}),(0,i.jsxs)(t.p,{children:["As you can see; ",(0,i.jsx)(t.code,{children:"makeValidator"})," expects a contract with 3 arguments."]}),(0,i.jsxs)(t.p,{children:["This means it can only be used for contracts with ",(0,i.jsx)(t.code,{children:"Spending"})," as ",(0,i.jsx)(t.code,{children:"PScriptPurpose"})]}),(0,i.jsxs)(t.p,{children:["For all other purposes you likely want to use ",(0,i.jsx)(t.a,{href:"./makeRedeemerValidator",children:(0,i.jsx)(t.code,{children:"makeRedeemerValidator"})})]})]}),"\n",(0,i.jsx)(t.h3,{id:"errormessage",children:"errorMessage"}),"\n",(0,i.jsxs)(t.p,{children:["Optionally you can pass a ",(0,i.jsx)(t.code,{children:"string"})," that will be included in the on-chain script and passed to ",(0,i.jsx)(t.code,{children:"ptrace"})," in case of failure"]})]})}function h(e={}){const{wrapper:t}={...(0,a.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},4552:(e,t,n)=>{n.d(t,{I:()=>r,M:()=>s});var i=n(11504);const a={},o=i.createContext(a);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);