"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[89056],{42772:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>a});var r=o(17624),t=o(4552);const c={sidebar_position:20},i="PProposalProcedure",s={id:"onchain/API/types/V3/Governance/PProposalProcedure",title:"PProposalProcedure",description:"Introduced in V3 version",source:"@site/docs/onchain/API/types/V3/Governance/PProposalProcedure.mdx",sourceDirName:"onchain/API/types/V3/Governance",slug:"/onchain/API/types/V3/Governance/PProposalProcedure",permalink:"/onchain/API/types/V3/Governance/PProposalProcedure",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/API/types/V3/Governance/PProposalProcedure.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"PGovernanceAction",permalink:"/onchain/API/types/V3/Governance/PGovernanceAction"},next:{title:"PProposalProcedure",permalink:"/onchain/API/types/V3/Governance/PProtocolVersion"}},d={},a=[{value:"<code>deposit</code>",id:"deposit",level:2},{value:"<code>returnCredentials</code>",id:"returncredentials",level:2},{value:"<code>governanceAction</code>",id:"governanceaction",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"pproposalprocedure",children:(0,r.jsx)(n.code,{children:"PProposalProcedure"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Introduced in V3 version"})}),"\n",(0,r.jsx)(n.p,{children:"Represents the procedure for submitting a governance proposal in the Cardano blockchain. It includes the deposit amount required, the credentials for returning the deposit, and the associated governance action"}),"\n",(0,r.jsx)(n.p,{children:"Definition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export const PProposalProcedure = pstruct({\n    PProposalProcedure: {\n        /** lovelaces */\n        deposit: int,\n        returnCredentials: PCredential.type,\n        governanceAction: PGovernanceAction.type\n    }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deposit",children:(0,r.jsx)(n.code,{children:"deposit"})}),"\n",(0,r.jsx)(n.p,{children:"The deposit amount (in lovelaces) required to submit the proposal"}),"\n",(0,r.jsxs)(n.p,{children:["type: ",(0,r.jsx)(n.a,{href:"../../../../stdlib/TermInt",children:(0,r.jsx)(n.code,{children:"TermInt"})})]}),"\n",(0,r.jsx)(n.h2,{id:"returncredentials",children:(0,r.jsx)(n.code,{children:"returnCredentials"})}),"\n",(0,r.jsx)(n.p,{children:"The staking or payment credential used to return the deposit after the proposal process is complete"}),"\n",(0,r.jsxs)(n.p,{children:["type: ",(0,r.jsx)(n.a,{href:"../../V1/Address/PCredential",children:(0,r.jsx)(n.code,{children:"PCredential.type"})})]}),"\n",(0,r.jsx)(n.h2,{id:"governanceaction",children:(0,r.jsx)(n.code,{children:"governanceAction"})}),"\n",(0,r.jsx)(n.p,{children:"The specific governance action being proposed"}),"\n",(0,r.jsxs)(n.p,{children:["type: ",(0,r.jsx)(n.a,{href:"./PGovernanceAction",children:(0,r.jsx)(n.code,{children:"PGovernanceAction.type"})})]})]})}function p(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4552:(e,n,o)=>{o.d(n,{I:()=>s,M:()=>i});var r=o(11504);const t={},c=r.createContext(t);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);