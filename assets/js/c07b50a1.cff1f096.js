"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[4652],{22420:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=e(17624),s=e(4552);const o={sidebar_position:3},a="Partial function application",c={id:"onchain/Values/Functions/partial_function_app",title:"Partial function application",description:"When a plu-ts function takes more than one argument, like the pTwoIntegersList we built explaining pfn, it is possible to get new functions from the first by passing only some of the parameters.",source:"@site/docs/onchain/Values/Functions/partial_function_app.mdx",sourceDirName:"onchain/Values/Functions",slug:"/onchain/Values/Functions/partial_function_app",permalink:"/onchain/Values/Functions/partial_function_app",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/Values/Functions/partial_function_app.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Function application",permalink:"/onchain/Values/Functions/Function_appliaciton"},next:{title:"builtins",permalink:"/onchain/Values/Functions/builtins"}},r={},l=[];function p(n){const t={a:"a",code:"code",em:"em",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.M)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"partial-function-application",children:"Partial function application"}),"\n",(0,i.jsxs)(t.p,{children:["When a ",(0,i.jsx)(t.code,{children:"plu-ts"})," function takes more than one argument, like the ",(0,i.jsx)(t.code,{children:"pTwoIntegersList"})," ",(0,i.jsxs)(t.a,{href:"./plam_and_pfn#pfn",children:["we built explaining ",(0,i.jsx)(t.code,{children:"pfn"})]}),", it is possible to get new functions from the first by passing only ",(0,i.jsx)(t.em,{children:"some"})," of the parameters."]}),"\n",(0,i.jsxs)(t.p,{children:["Since the type of ",(0,i.jsx)(t.code,{children:"pTwoIntegersList"})," was something like ",(0,i.jsx)(t.code,{children:"int -> int -> list( int )"}),", ",(0,i.jsx)(t.code,{children:"pTwoIntegersList"})," expects ",(0,i.jsx)(t.em,{children:"2"})," arguments; however if we pass only 1 the result will be a valid Term of type ",(0,i.jsx)(t.code,{children:"int -> list( int )"}),"; which is another ",(0,i.jsx)(t.code,{children:"plu-ts"})," function!"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:" // this is a Term from PInt to PList<PInt>!\nconst pListWith42First = pTwoIntegersList.$( 42 );\n"})}),"\n",(0,i.jsx)(t.p,{children:"In particular, the new function we get behaves just like the first but with the arguments already passed that are fixed and can't be changed."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"// equivalent to pTwoIntegersList.$( 42 ).$( 69 )\nconst niceList = pListWith42First.$( 69 );\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This not only reduces the number of new functions you need to create but is also ",(0,i.jsx)(t.strong,{children:"more efficient"})," than wrapping the first function inside of a new lambda."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"// bad practice;\nconst pInefficientListWith42First = plam( int, list( int ) )\n    ( int2 =>\n        // highlight-bad-practice\n        pTwoIntegersList.$( 42 ).$( int2 )\n    );\n"})}),"\n",(0,i.jsx)(t.p,{children:"Even if the compiler is smart enough to optimize some trivial cases, it is still best practice to avoid doing this."})]})}function u(n={}){const{wrapper:t}={...(0,s.M)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},4552:(n,t,e)=>{e.d(t,{I:()=>c,M:()=>a});var i=e(11504);const s={},o=i.createContext(s);function a(n){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(o.Provider,{value:t},n.children)}}}]);