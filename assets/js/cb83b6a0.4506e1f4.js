"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[17956],{86696:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=n(17624),s=n(4552);const i={sidebar_position:24},d="POutputDatum",u={id:"onchain/API/types/V2/Tx/POutputDatum",title:"POutputDatum",description:"Introduced in V2 version",source:"@site/docs/onchain/API/types/V2/Tx/POutputDatum.mdx",sourceDirName:"onchain/API/types/V2/Tx",slug:"/onchain/API/types/V2/Tx/POutputDatum",permalink:"/onchain/API/types/V2/Tx/POutputDatum",draft:!1,unlisted:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts-docs/docs/onchain/API/types/V2/Tx/POutputDatum.mdx",tags:[],version:"current",sidebarPosition:24,frontMatter:{sidebar_position:24},sidebar:"tutorialSidebar",previous:{title:"PTxOutRef",permalink:"/onchain/API/types/V2/Tx/PTxOutRef"},next:{title:"V3",permalink:"/category/v3"}},o={},c=[{value:"<code>NoDatum</code>",id:"nodatum",level:2},{value:"<code>DatumHash</code>",id:"datumhash",level:2},{value:"<code>datumHash</code>",id:"datumhash-1",level:3},{value:"<code>InlineDatum</code>",id:"inlinedatum",level:2},{value:"<code>datum</code>",id:"datum",level:3}];function r(t){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.M)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"poutputdatum",children:(0,a.jsx)(e.code,{children:"POutputDatum"})}),"\n",(0,a.jsx)(e.admonition,{type:"info",children:(0,a.jsx)(e.p,{children:"Introduced in V2 version"})}),"\n",(0,a.jsx)(e.p,{children:"This type defines various ways extra information (datum) can be attached to a transaction output."}),"\n",(0,a.jsx)(e.p,{children:"Definition:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'import { pstruct } from "../../../PTypes/PStruct/pstruct";\nimport { data } from "../../../type_system/types";\nimport { PDatumHash } from "../../V1/ScriptsHashes/PDatumHash";\n\nexport const POutputDatum = pstruct({\n    NoDatum: {},\n    DatumHash: { datumHash: PDatumHash.type },\n    InlineDatum: { datum: data }\n});\n'})}),"\n",(0,a.jsx)(e.h2,{id:"nodatum",children:(0,a.jsx)(e.code,{children:"NoDatum"})}),"\n",(0,a.jsx)(e.p,{children:"Represents an output without any associated datum, this being the simplest form."}),"\n",(0,a.jsxs)(e.p,{children:["type: ",(0,a.jsx)(e.a,{href:"../../V1/Tx/PTxOutRef",children:(0,a.jsx)(e.code,{children:"PTxOutRef.type"})})]}),"\n",(0,a.jsx)(e.h2,{id:"datumhash",children:(0,a.jsx)(e.code,{children:"DatumHash"})}),"\n",(0,a.jsx)(e.h3,{id:"datumhash-1",children:(0,a.jsx)(e.code,{children:"datumHash"})}),"\n",(0,a.jsx)(e.p,{children:"The hash of datum that can be used to reference the datum. This is used instead of embedding the full datum in the output."}),"\n",(0,a.jsxs)(e.p,{children:["type: ",(0,a.jsx)(e.a,{href:"../../V1/ScriptsHashes/PDatumHash",children:(0,a.jsx)(e.code,{children:"PDatumHash.type"})})]}),"\n",(0,a.jsx)(e.h2,{id:"inlinedatum",children:(0,a.jsx)(e.code,{children:"InlineDatum"})}),"\n",(0,a.jsx)(e.p,{children:"Represents an inline datum in case the full datum needs to be readily accessible without any further lookup."}),"\n",(0,a.jsx)(e.h3,{id:"datum",children:(0,a.jsx)(e.code,{children:"datum"})}),"\n",(0,a.jsx)(e.p,{children:"The actual raw data associated with the transaction output"}),"\n",(0,a.jsxs)(e.p,{children:["type: ",(0,a.jsx)(e.code,{children:"data"})]})]})}function h(t={}){const{wrapper:e}={...(0,s.M)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(r,{...t})}):r(t)}},4552:(t,e,n)=>{n.d(e,{I:()=>u,M:()=>d});var a=n(11504);const s={},i=a.createContext(s);function d(t){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function u(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:d(t.components),a.createElement(i.Provider,{value:e},t.children)}}}]);