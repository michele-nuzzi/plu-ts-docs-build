"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[7426],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>N});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),l=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(m.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=l(n),k=a,N=s["".concat(m,".").concat(k)]||s[k]||u[k]||o;return n?r.createElement(N,i(i({ref:t},d),{},{components:n})):r.createElement(N,i({ref:t},d))}));function N(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=k;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p[s]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},160:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:0},i="TermInt",p={unversionedId:"onchain/stdlib/TermInt",id:"onchain/stdlib/TermInt",title:"TermInt",description:"type definition:",source:"@site/docs/onchain/stdlib/TermInt.mdx",sourceDirName:"onchain/stdlib",slug:"/onchain/stdlib/TermInt",permalink:"/docs/onchain/stdlib/TermInt",draft:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts/tree/main/packages/create-docusaurus/templates/shared/docs/onchain/stdlib/TermInt.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"stdlib",permalink:"/docs/category/stdlib"},next:{title:"TermBool",permalink:"/docs/onchain/stdlib/TermBool"}},m={},l=[{value:"add",id:"add",level:2},{value:"sub",id:"sub",level:2},{value:"mult",id:"mult",level:2},{value:"div",id:"div",level:2},{value:"quot",id:"quot",level:2},{value:"remainder",id:"remainder",level:2},{value:"mod",id:"mod",level:2},{value:"eq",id:"eq",level:2},{value:"lt",id:"lt",level:2},{value:"ltEq",id:"lteq",level:2},{value:"gt",id:"gt",level:2},{value:"gtEq",id:"gteq",level:2}],d={toc:l},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"termint"},(0,a.kt)("inlineCode",{parentName:"h1"},"TermInt")),(0,a.kt)("p",null,"type definition:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"\ntype TermInt = Term<PInt& {\n    \n    readonly addTerm:       TermFn<[PInt], PInt>\n    readonly add:           ( other: Term<PInt) =TermInt\n\n    readonly subTerm:       TermFn<[PInt], PInt>\n    readonly sub:           ( other: Term<PInt) =TermInt\n\n    readonly multTerm:      TermFn<[PInt], PInt>\n    readonly mult:          ( other: Term<PInt) =TermInt\n\n    readonly divTerm:       TermFn<[PInt], PInt>\n    readonly div:           ( other: Term<PInt) =TermInt\n\n    readonly quotTerm:      TermFn<[PInt], PInt>\n    readonly quot:          ( other: Term<PInt) =TermInt\n\n    readonly remainderTerm: TermFn<[PInt], PInt>\n    readonly remainder:     ( other: Term<PInt) =TermInt\n\n    readonly modTerm:       TermFn<[PInt], PInt>\n    readonly mod:           ( other: Term<PInt) =TermInt\n\n    \n    readonly eqTerm:    TermFn<[PInt], PBool>\n    readonly eq:        ( other: Term<PInt) =TermBool\n        \n    readonly ltTerm:    TermFn<[PInt], PBool>\n    readonly lt:        ( other: Term<PInt) =TermBool\n        \n    readonly ltEqTerm:  TermFn<[PInt], PBool>\n    readonly ltEq:      ( other: Term<PInt) =TermBool\n        \n    readonly gtTerm:    TermFn<[PInt], PBool>\n    readonly gt:        ( other: Term<PInt) =TermBool\n        \n    readonly gtEqTerm:  TermFn<[PInt], PBool>\n    readonly gtEq:      ( other: Term<PInt) =TermBool\n        \n};\n")),(0,a.kt)("h2",{id:"add"},"add"),(0,a.kt)("admonition",{title:"add",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"padd.$( term ).$( other )\n"))),(0,a.kt)("p",null,"adds ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," to the term is defined on and returns the result"),(0,a.kt)("h2",{id:"sub"},"sub"),(0,a.kt)("admonition",{title:"sub",type:"note"},(0,a.kt)("p",{parentName:"admonition"}," parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"}," returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"}," equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"psub.$( term ).$( other )\n"))),(0,a.kt)("p",null,"subtracts ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," to the term is defined on and returns the result"),(0,a.kt)("h2",{id:"mult"},"mult"),(0,a.kt)("admonition",{title:"mult",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pmult.$( term ).$( other )\n"))),(0,a.kt)("p",null,"multiplies ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," to the term is defined on and returns the result"),(0,a.kt)("h2",{id:"div"},"div"),(0,a.kt)("admonition",{title:"div",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pdiv.$( term ).$( other )\n"))),(0,a.kt)("p",null,"performs integer division using the term is defined on and ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," as divisor; returns the result rounded towards negative infinity."),(0,a.kt)("admonition",{title:"example",type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pInt( -20 ).div( -3 ) // ==  -7\n"))),(0,a.kt)("h2",{id:"quot"},"quot"),(0,a.kt)("admonition",{title:"quot",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pquot.$( term ).$( other )\n"))),(0,a.kt)("p",null,"performs integer division using the term is defined on and ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," as divisor; returns the quotient rounded towards zero:"),(0,a.kt)("admonition",{title:"example",type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pInt( -20 ).quot( 3 ) // ==  -6\n"))),(0,a.kt)("h2",{id:"remainder"},"remainder"),(0,a.kt)("admonition",{title:"remainder",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"prem.$( term ).$( other )\n"))),(0,a.kt)("p",null,"performs integer division using the term is defined on and ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," as divisor; returns the remainder:"),(0,a.kt)("admonition",{title:"example",type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pInt( -20 ).remainder( 3 ) // ==  -2\n"))),(0,a.kt)("h2",{id:"mod"},"mod"),(0,a.kt)("admonition",{title:"mod",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"TermInt")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pmod.$( term ).$( other )\n"))),(0,a.kt)("p",null,"returns the term the method is defined on, in modulo ",(0,a.kt)("inlineCode",{parentName:"p"},"other"),"."),(0,a.kt)("admonition",{title:"example",type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pInt( -20 ).mod( 3 ) // ==  1\n"))),(0,a.kt)("h2",{id:"eq"},"eq"),(0,a.kt)("admonition",{title:"eq",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"peqInt.$( term ).$( other )\n"))),(0,a.kt)("p",null,"integer equality"),(0,a.kt)("h2",{id:"lt"},"lt"),(0,a.kt)("admonition",{title:"lt",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"plessInt.$( term ).$( other )\n"))),(0,a.kt)("p",null,"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( true )")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"term")," is strictly less than ",(0,a.kt)("inlineCode",{parentName:"p"},"other"),"; ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( false )")," otherwise"),(0,a.kt)("h2",{id:"lteq"},"ltEq"),(0,a.kt)("admonition",{title:"ltEq",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"plessEqInt.$( term ).$( other )\n"))),(0,a.kt)("p",null,"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( true )")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"term")," is less or equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"other"),"; ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( false )")," otherwise"),(0,a.kt)("h2",{id:"gt"},"gt"),(0,a.kt)("admonition",{title:"gt",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pgreaterInt.$( term ).$( other )\n"))),(0,a.kt)("p",null,"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( true )")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"term")," is strictly greater than ",(0,a.kt)("inlineCode",{parentName:"p"},"other"),"; ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( false )")," otherwise"),(0,a.kt)("h2",{id:"gteq"},"gtEq"),(0,a.kt)("admonition",{title:"gtEq",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"parameter: ",(0,a.kt)("inlineCode",{parentName:"p"},"other")," type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Term<PInt>")),(0,a.kt)("p",{parentName:"admonition"},"returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"TermBool")),(0,a.kt)("p",{parentName:"admonition"},"equivalent expression:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"pgreaterEqInt.$( term ).$( other )\n"))),(0,a.kt)("p",null,"returns ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( true )")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"term")," is greater or equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"other"),"; ",(0,a.kt)("inlineCode",{parentName:"p"},"pBool( false )")," otherwise"))}u.isMDXComponent=!0}}]);