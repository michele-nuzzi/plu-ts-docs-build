"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[935],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||i;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:0},o="TxBuilder",l={unversionedId:"offchain/TxBuilder API/TxBuilder",id:"offchain/TxBuilder API/TxBuilder",title:"TxBuilder",description:"plu-ts/offchain exposes the TxBuilder class.",source:"@site/docs/offchain/TxBuilder API/TxBuilder.mdx",sourceDirName:"offchain/TxBuilder API",slug:"/offchain/TxBuilder API/TxBuilder",permalink:"/docs/offchain/TxBuilder API/TxBuilder",draft:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts/tree/main/packages/create-docusaurus/templates/shared/docs/offchain/TxBuilder API/TxBuilder.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"TxBuilder API",permalink:"/docs/category/txbuilder-api"},next:{title:"build interface",permalink:"/docs/offchain/TxBuilder API/build interface"}},u={},p=[{value:"Why?",id:"why",level:2},{value:"What does it do?",id:"what-does-it-do",level:2}],s={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"txbuilder"},(0,a.kt)("inlineCode",{parentName:"h1"},"TxBuilder")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"plu-ts/offchain")," exposes the ",(0,a.kt)("inlineCode",{parentName:"p"},"TxBuilder")," class."),(0,a.kt)("h2",{id:"why"},"Why?"),(0,a.kt)("p",null,"Its purpose is to allow you to build transactions more easly."),(0,a.kt)("p",null,"You could infact build transactions by calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"Tx")," constructor."),(0,a.kt)("p",null,"However that requires a profound understanding of the structure of a Cardano transaction."),(0,a.kt)("p",null,"for this reason we have the ",(0,a.kt)("inlineCode",{parentName:"p"},"TxBuilder"),"."),(0,a.kt)("p",null,"You can get your ",(0,a.kt)("inlineCode",{parentName:"p"},"TxBuilder")," instance by specifying the network to operate in (",(0,a.kt)("inlineCode",{parentName:"p"},'"mainnet" | "testnet"'),") and its protocol paramters (that you'll need to query)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const txBuilder = new TxBuilder(\n    "mainnet",\n    await fetch("https://some-api.com/get-my-protocol-params")\n)\n')),(0,a.kt)("h2",{id:"what-does-it-do"},"What does it do?"),(0,a.kt)("p",null,"once you have your tx builder you can use it to build (and validate transactions)."),(0,a.kt)("p",null,"it has 2 main methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"buildSync"),"."),(0,a.kt)("p",null,"As for now ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," is really just wrapping ",(0,a.kt)("inlineCode",{parentName:"p"},"buildSync")," in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),";\nbut in a future version it will be able to offload eventual smart contracts validation to a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Worker"},(0,a.kt)("inlineCode",{parentName:"a"},"Worker")),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"buildSync")," interface is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"}," buildSync({\n        inputs,\n        changeAddress,\n        outputs,\n        readonlyRefInputs,\n        requiredSigners,\n        collaterals,\n        collateralReturn,\n        mints,\n        invalidBefore,\n        invalidAfter,\n        certificates,\n        withdrawals,\n        metadata,\n        protocolUpdateProposal\n    }: ITxBuildArgs,\n    {\n        onScriptInvalid,\n        onScriptResult\n    }: ITxBuildOptions = {}\n): Tx\n")),(0,a.kt)("p",null,"and it is inspired by ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-cli"),"."))}c.isMDXComponent=!0}}]);