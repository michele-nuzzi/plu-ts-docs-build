"use strict";(self.webpackChunkplu_ts_docs=self.webpackChunkplu_ts_docs||[]).push([[3227],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8944:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:0},o="cardanocli-pluts",s={unversionedId:"tools/cardanocli-pluts",id:"tools/cardanocli-pluts",title:"cardanocli-pluts",description:"cardanocli-pluts",source:"@site/docs/tools/cardanocli-pluts.md",sourceDirName:"tools",slug:"/tools/cardanocli-pluts",permalink:"/docs/tools/cardanocli-pluts",draft:!1,editUrl:"https://github.com/HarmonicLabs/plu-ts/tree/main/packages/create-docusaurus/templates/shared/docs/tools/cardanocli-pluts.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Tools",permalink:"/docs/category/tools"},next:{title:"koios-pluts",permalink:"/docs/tools/koios-pluts"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting started",id:"getting-started",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cardanocli-pluts"},"cardanocli-pluts"),(0,a.kt)("admonition",{title:"GitHub",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/HarmonicLabs/cardanocli-pluts"},"cardanocli-pluts"))),(0,a.kt)("p",{align:"center"},(0,a.kt)("h1",{align:"center"},"cardanocli-pluts"),(0,a.kt)("p",{align:"center"},(0,a.kt)("a",{href:"https://twitter.com/hlabs_tech"},(0,a.kt)("img",{src:"https://img.shields.io/twitter/follow/hlabs_tech?style=for-the-badge&logo=twitter"})),(0,a.kt)("a",{href:"https://twitter.com/MicheleHarmonic"},(0,a.kt)("img",{src:"https://img.shields.io/twitter/follow/MicheleHarmonic?style=for-the-badge&logo=twitter"})))),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"cardanocli-pluts")," is a library that wraps cardano-cli using Typescript allowing you to interact with the cli using the Types exposed by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/HarmonicLabs/plu-ts"},(0,a.kt)("inlineCode",{parentName:"a"},"plu-ts"))),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cardano-node >= 1.29.0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node.js >= 12.19.0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plu-ts >= 0.2.0"))),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CardanoCliPluts } from "@harmoniclabs/cardanocli-pluts"\nimport { Value } from "@harmoniclabs/plu-ts"\n\nconst cli = new CardanoCliPluts({\n    network: "testnet 42"\n});\n\nasync function main(){\n\n    // read a saved address from file\n    const bobAddr = await cli.utils.readAddress( "./addresses/bob.addr" );\n\n    // or make a new addres using the cli\n    const { privateKey, publicKey } = await cli.address.keyGen();\n\n    const myAddr = await cli.address.build({\n        payment: { publicKey }\n    });\n\n    // query the UTxOs at myAddr\n    const myUtxos = await cli.query.utxo({\n        address: myAddr\n    });\n\n    // send some ada to bob\n    const tx = await cli.transaction.build({\n        inputs: [{ utxo: myUtxos[0] }],\n        outpus: [\n            {\n                address: bobAddr,\n                value: Value.lovelaces(2_000_000)\n            }\n        ],\n        changeAddress: myAddr\n    });\n\n    const txSigned = await cli.transaction.sign({\n        tx,\n        privateKey\n    });\n\n    // let\'s check everything is ok before submission\n    console.log(\n        JSON.stringify(\n            txSigned.toJson(),\n            undefined,\n            2\n        )\n    );\n\n    // send the transaction\n    cli.transaction.submit({ tx: txSigned })\n\n}\n\nmain()\n')))}u.isMDXComponent=!0}}]);